<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yj.dao.Tip_offMapper" >
  <resultMap id="BaseResultMap" type="com.yj.pojo.Tip_off" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="report_reason" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, report_reason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tip_off
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tip_off
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yj.pojo.Tip_off" >
    insert into tip_off (id, type, report_reason
    )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{reportReason,jdbcType=VARCHAR}
           )
  </insert>
  <insert id="insertSelective" parameterType="com.yj.pojo.Tip_off" >
    insert into tip_off
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="reportReason != null" >
        report_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="reportReason != null" >
        #{reportReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yj.pojo.Tip_off" >
    update tip_off
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="reportReason != null" >
        report_reason = #{reportReason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yj.pojo.Tip_off" >
    update tip_off
    set type = #{type,jdbcType=INTEGER},
        report_reason = #{reportReason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--下面是自己添加的-->
  <update id="updateUsername" parameterType="string">
    update dating_card
    set `wx_name` = #{name}
    WHERE user_id = #{id}
  </update>

  <update id="update_d_Gender" parameterType="string">
    update dating_card set `gender`= #{gender}
    where user_id = #{id}
  </update>

  <update id="updateIntention" parameterType="string">
    update dating_card set `intention` = #{intention}
    where user_id = #{id}
  </update>

  <update id="updateSignature" parameterType="string">
    update dating_card set `signature` = #{signature}
    where user_id = #{id}
  </update>

  <update id="updateStatus" parameterType="string">
    update dating_card set `status` = #{status}
    where user_id = #{id}
  </update>

  <update id="updateVip" parameterType="string">
    update user set  `dating_vip` = #{vip}
    where id = #{id}
  </update>

  <update id="updateAge" parameterType="string">
    update dating_card set `age`= #{age}
    where user_id = #{id}
  </update>

  <update id="updateCondition" parameterType="string">
    update dating_card  set `is_in_love` = #{condition}
    where user_id = #{id}
  </update>

  <select id="whetherInLove" parameterType="string" resultType="string">
    select `is_in_love` from dating_card
    where user_id = #{id}
  </select>

  <update id = "updateLoveTimes" parameterType="string">
    update dating_card set `love_times`= love_times + 1
    where user_id = #{id}
  </update>

  <insert id = "insertDatingRelationship" parameterType="string">
    insert into dating_relationship(lover_one_user_id,lover_another_user_id,set_time)
    values(#{id},#{another_id},#{time} )
  </insert>

  <select id="selectLover" parameterType="string" resultType="map">
    select id,lover_one_user_id,lover_another_user_id from
      dating_relationship
    where (lover_one_user_id = #{id}) or (lover_another_user_id = #{id})
  </select>

  <delete id="deleteRelationship" parameterType="string">
    delete from dating_relationship
    where id = #{id}
  </delete>

  <update id="updateCover" >
    update dating_card set `cover`=#{url}
    where user_id = #{id}
  </update>

  <select id="selectCardId" parameterType="string" resultType="string">
    select id from dating_card
    where user_id = #{user_id}
  </select>

  <update id="updateTag" parameterType="string">
    update dating_card_tag set `tag`=#{tag}
    where card_id=#{id}
  </update>

  <select id="isNullTag" parameterType="string" resultType="map">
    select id from dating_card_tag
    where card_id = #{id}
  </select>

  <insert id="insertTag" parameterType="string" >
    insert into `dating_card_tag` (card_id, tag)
    values(#{id},#{tag})
  </insert>

  <delete id = "deleteTag" parameterType="string">
    delete from `dating_card_tag`
    where id = #{tag_id}
  </delete>

  <update id="updateTime" parameterType="string">
    update dating_specify_card set `set_time`=#{time}
    where user_id = #{id}
  </update>

  <select id="selectByWord" parameterType="string" resultType="map">
    select * from dating_card
    where `wx_name` like "%"#{word}"%"
  </select>

  <!--<update id="deleteLoving" parameterType="string">-->
  <!--update dating_card set `is_in_love` = 0-->
  <!--where user_id = #{id}-->
  <!--</update>-->

  <update id="pre_user" parameterType="string">
    update dating_specify_card set
                                 `rank` = #{pos}
                                 `set_time` = #{time}
    where user_id = #{id}
  </update>

  <update id="addShowTime" >
    update dating_card  set
      show_times = #{showtime}
    where user_id = #{id}
  </update>

  <select id = "selectShowTime" parameterType="string" resultType="int">
    select show_times from dating_card
    where user_id = #{id}
  </select>

  <select id = "selectStatus" resultType="int">
    select status from dating_card
    where user_id = #{id}
  </select>


  <select id = "isOnShow" resultType="map">
    select * from dating_specify_card
    where user_id = #{id}
  </select>

  <!--<select id = "selectUserByDate" resultType="map">-->
  <!--select -->
  <!--</select>-->
</mapper>