<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yj.dao.Common_configMapper" >
  <resultMap id="BaseResultMap" type="com.yj.pojo.Common_config" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="start_page" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="daily_pic" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="get_home_page_portrait_max" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, start_page, daily_pic, get_home_page_portrait_max
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from common_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from common_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yj.pojo.Common_config" >
    insert into common_config (id, start_page, daily_pic, 
      get_home_page_portrait_max)
    values (#{id,jdbcType=INTEGER}, #{startPage,jdbcType=VARCHAR}, #{dailyPic,jdbcType=VARCHAR}, 
      #{getHomePagePortraitMax,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yj.pojo.Common_config" >
    insert into common_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="startPage != null" >
        start_page,
      </if>
      <if test="dailyPic != null" >
        daily_pic,
      </if>
      <if test="getHomePagePortraitMax != null" >
        get_home_page_portrait_max,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="startPage != null" >
        #{startPage,jdbcType=VARCHAR},
      </if>
      <if test="dailyPic != null" >
        #{dailyPic,jdbcType=VARCHAR},
      </if>
      <if test="getHomePagePortraitMax != null" >
        #{getHomePagePortraitMax,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yj.pojo.Common_config" >
    update common_config
    <set >
      <if test="startPage != null" >
        start_page = #{startPage,jdbcType=VARCHAR},
      </if>
      <if test="dailyPic != null" >
        daily_pic = #{dailyPic,jdbcType=VARCHAR},
      </if>
      <if test="getHomePagePortraitMax != null" >
        get_home_page_portrait_max = #{getHomePagePortraitMax,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yj.pojo.Common_config" >
    update common_config
    set start_page = #{startPage,jdbcType=VARCHAR},
      daily_pic = #{dailyPic,jdbcType=VARCHAR},
      get_home_page_portrait_max = #{getHomePagePortraitMax,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <!--下面的是自己添加的-->
  <update id="changeLastLogin" parameterType="string">
    UPDATE `user`
    set last_login = #{time}
    WHERE id = #{id}
  </update>


  <update id="changeRetentionFlag">
    UPDATE `user`
    set retention_flag = #{flag}
    WHERE id = #{id}
  </update>

  <update id="changeDauAndTimes">
    UPDATE data_info
    set `daily_app_start` = daily_app_start + #{daily_app_start},
    `dau` = dau + #{dau}
    WHERE set_time = #{set_time}
  </update>

  <update id="changeMAU">
    UPDATE data_info
    set `mau` = mau + #{mau}
    WHERE set_time > #{set_time}
  </update>

  <update id="change_draw_win_status">
    UPDATE lottery_draw_contestants
    set `status` = #{status}
    WHERE user_id = #{user_id}
    AND lottery_draw_id = #{lottery_draw_id}
  </update>

  <update id="changeRetention">
    UPDATE data_info
    set `two_day_retention` = two_day_retention + #{two_day_retention},
    `seven_day_retention` = seven_day_retention + #{seven_day_retention},
    `month_retention` = month_retention + #{month_retention}
    WHERE set_time = #{set_time}
  </update>

  <insert id="insertDataInfo">
    INSERT INTO data_info (daily_app_start, dau, mau, set_time)
    values (#{daily_app_start}, #{dau}, IFNULL((SELECT max_mau FROM (SELECT MAX(`mau`) as max_mau FROM data_info WHERE set_time >= #{mau_time}) tb),0), #{set_time})
  </insert>

  <insert id="insertWelfareService" parameterType="string">
    INSERT INTO welfare_service (pic, url, st, et)
    values (#{pic}, #{url}, #{st}, #{et})
  </insert>

  <insert id="insertLotteryDraw" parameterType="string">
    INSERT INTO lottery_draw (prize, prize_pic, prize_tomorrow, prize_tomorrow_pic, upload_time, set_time)
    values (#{prize}, #{prize_pic}, #{prize_tomorrow}, #{prize_tomorrow_pic}, #{upload_time}, #{et})
  </insert>

  <insert id="insertVirtualId" parameterType="string">
    INSERT INTO virtual_user (user_id)
    values (#{user_id})
  </insert>

  <insert id="insertTemplateFormId" parameterType="string">
    INSERT INTO template_msg (user_id,wechat,form_id,set_time)
    values (#{user_id},#{wechat},#{form_id},#{set_time})
  </insert>

  <select id="getDailyAdminInfo" resultType="map">
    SELECT  *
    FROM `data_info`
    ORDER BY set_time desc
    LIMIT #{start},#{size}
  </select>


  <select id="showAuthorInfo" resultType="map">
    SELECT id,username,portrait,gender,personality_signature
    FROM `user`
    WHERE id IN (SELECT  user_id as id
    FROM `author_info`)
    LIMIT #{start},#{size}
  </select>

  <select id="showVirtualUser" resultType="map">
    SELECT id,username,portrait,gender,personality_signature
    FROM `user`
    WHERE id IN (SELECT  user_id as id
    FROM `virtual_user`)
    LIMIT #{start},#{size}
  </select>

  <select id="showLotteryDraw" resultType="map">
    SELECT *
    FROM `lottery_draw`
    WHERE id = #{id}
  </select>

  <select id="getUserOpenid" resultType="string">
    SELECT wechat
    FROM `user`
    WHERE id = #{id}
  </select>

  <select id="getUserWhetherReminder" resultType="string">
    SELECT whether_reminder
    FROM `user`
    WHERE id = #{id}
  </select>

  <select id="getUserWhetherTemplate" resultType="string">
    SELECT whether_template
    FROM `user`
    WHERE id = #{id}
  </select>

  <select id="showLotteryDrawWinner" resultType="map" parameterType="string">
    SELECT id,username,portrait,tb.virtual
    FROM `user`,(SELECT lottery_draw_contestants.user_id,lottery_draw_contestants.virtual
                FROM `lottery_draw_contestants`
                WHERE lottery_draw_id = #{id}
                AND `status` = 1) tb
    WHERE `user`.id = tb.user_id
  </select>

  <select id="showLotteryDrawContestantsVirtual" resultType="map" parameterType="string">
    SELECT id,username,portrait
    FROM `user`
    WHERE id IN
          (SELECT user_id
           FROM `virtual_user`
           WHERE user_id IN
          (SELECT user_id
           FROM `lottery_draw_contestants`
           WHERE lottery_draw_id = #{id}))
  </select>

  <select id="showLotteryDrawContestantsReal" resultType="map" parameterType="string">
    SELECT id,username,portrait
    FROM `user`
    WHERE id IN
          (SELECT user_id
           FROM `lottery_draw_contestants`
           WHERE lottery_draw_id = #{id})
  </select>

  <select id="getCommonConfig" resultType="map">
    SELECT  *
    FROM `common_config`
    WHERE id = 1
  </select>

  <select id="getUserWinStatus" resultType="string" parameterType="string">
    SELECT status
    FROM `lottery_draw_contestants`
    WHERE lottery_draw_id = #{lottery_draw_id}
    AND user_id = #{user_id}
  </select>

  <select id="getAdvice" resultType="map">
    SELECT  *
    FROM `advice`
    LIMIT #{start},#{size}
  </select>


  <select id="getLotteryDrawDescription" resultType="map" parameterType="string">
    SELECT prize,prize_pic,prize_tomorrow,prize_tomorrow_pic,set_time as end_time
    FROM lottery_draw
    WHERE set_time > #{now_time}
    ORDER BY abs(set_time- #{now_time}) ASC
    LIMIT 1
  </select>


  <select id="getLotteryDrawWinner" resultType="map" parameterType="string">
    SELECT table1.prize,table1.prize_pic,`user`.username,`user`.portrait
    FROM `user`,
    (SELECT user_id,tb.prize,prize_pic
    FROM lottery_draw_contestants,
    (SELECT id,prize,prize_pic
    FROM lottery_draw
    WHERE set_time &lt; #{now_time}
    ORDER BY abs(set_time - #{now_time}) ASC
    LIMIT 1) tb
    WHERE lottery_draw_contestants.lottery_draw_id = tb.id
    AND lottery_draw_contestants.status = 1) table1
    WHERE table1.user_id = `user`.id
    LIMIT 3
  </select>


  <update id="changeDailyFinishWork">
    UPDATE data_info
    set `daily_finish_work` = daily_finish_work + #{daily_finish_work}
    WHERE set_time = #{set_time}
  </update>

  <update id="changeUserRemind">
    UPDATE `user`
    set `whether_reminder` = #{whether_reminder}
    WHERE id = #{id}
  </update>

  <update id="changeUserTemplateOpen">
    UPDATE `user`
    set `whether_template` = 1
    WHERE id = #{id}
  </update>

  <update id="changeUserTemplateClose">
    UPDATE `user`
    set `whether_template` = 0,
    `whether_reminder` = 0
    WHERE id = #{id}
  </update>

  <update id="changeTopWelfareService" parameterType="string">
    UPDATE welfare_service,(SELECT MAX(`order`) as number FROM welfare_service) tb
    set `order` = tb.number+1
    WHERE id = #{id}
  </update>

  <delete id="deleteFeedsReply" parameterType="string" >
    DELETE FROM `feeds_reply_comments`
    WHERE feeds_comment_id IN
    (SELECT id FROM feeds_comment
    where feeds_id = #{id})
  </delete>

  <delete id="deleteFeedsCommentLikes" parameterType="string" >
    DELETE FROM `feeds_comment_like`
    WHERE feeds_comment_id IN
    (SELECT id FROM feeds_comment
    where feeds_id = #{id})
  </delete>

  <delete id="deleteFeedsComment" parameterType="string" >
    DELETE FROM feeds_comment
    where feeds_id = #{id}
  </delete>

  <delete id="deleteFeedsFavour" parameterType="string" >
    DELETE FROM feeds_favour
    where feeds_id = #{id}
  </delete>

  <delete id="deleteFeedsLike" parameterType="string" >
    DELETE FROM feeds_like
    where feeds_id = #{id}
  </delete>

  <delete id="deleteFeedsInner" parameterType="string" >
    DELETE FROM feeds_inner
    where feeds_id = #{id}
  </delete>

  <delete id="deleteDrawVirtualUser" parameterType="string" >
    DELETE FROM lottery_draw_contestants
    where user_id = #{id}
  </delete>

  <delete id="deleteFeeds" parameterType="string" >
    DELETE FROM feeds
    where id = #{id}
  </delete>

  <delete id="deleteFeedsReplyLike" parameterType="string" >
    DELETE FROM `feeds_reply_comment_like`
    WHERE feeds_reply_comment_id IN
    (SELECT id
    FROM `feeds_reply_comments`
    WHERE feeds_comment_id IN
    (SELECT id FROM feeds_comment
    where feeds_id = #{id}))
  </delete>
</mapper>