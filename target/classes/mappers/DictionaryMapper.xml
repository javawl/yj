<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yj.dao.DictionaryMapper" >
  <resultMap id="BaseResultMap" type="com.yj.pojo.Dictionary" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="word" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="meaning" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phonetic_symbol_en" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pronunciation_en" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sentence" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pic" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="tv" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="phonetic_symbol_us" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pronunciation_us" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phonetic_symbol" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pronunciation" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sentence_cn" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sentence_audio" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="real_meaning" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phonetic_symbol_en_Mumbler" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pronunciation_en_Mumbler" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phonetic_symbol_us_Mumbler" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pronunciation_us_Mumbler" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="meaning_Mumbler" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phrase" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="favours" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="synonym" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="word_of_similar_form" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="stem_affix" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="paraphrase" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, word, meaning, phonetic_symbol_en, pronunciation_en, sentence, pic, tv, type,
    phonetic_symbol_us, pronunciation_us, phonetic_symbol, pronunciation, sentence_cn,
    sentence_audio, real_meaning, phonetic_symbol_en_Mumbler, pronunciation_en_Mumbler,
    phonetic_symbol_us_Mumbler, pronunciation_us_Mumbler, meaning_Mumbler, phrase, favours,
    synonym, word_of_similar_form, stem_affix, paraphrase
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from dictionary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dictionary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yj.pojo.Dictionary" >
    insert into dictionary (id, word, meaning,
      phonetic_symbol_en, pronunciation_en, sentence,
      pic, tv, type, phonetic_symbol_us,
      pronunciation_us, phonetic_symbol, pronunciation,
      sentence_cn, sentence_audio, real_meaning,
      phonetic_symbol_en_Mumbler, pronunciation_en_Mumbler,
      phonetic_symbol_us_Mumbler, pronunciation_us_Mumbler,
      meaning_Mumbler, phrase, favours,
      synonym, word_of_similar_form, stem_affix,
      paraphrase)
    values (#{id,jdbcType=INTEGER}, #{word,jdbcType=VARCHAR}, #{meaning,jdbcType=VARCHAR},
      #{phoneticSymbolEn,jdbcType=VARCHAR}, #{pronunciationEn,jdbcType=VARCHAR}, #{sentence,jdbcType=VARCHAR},
      #{pic,jdbcType=VARCHAR}, #{tv,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{phoneticSymbolUs,jdbcType=VARCHAR},
      #{pronunciationUs,jdbcType=VARCHAR}, #{phoneticSymbol,jdbcType=VARCHAR}, #{pronunciation,jdbcType=VARCHAR},
      #{sentenceCn,jdbcType=VARCHAR}, #{sentenceAudio,jdbcType=VARCHAR}, #{realMeaning,jdbcType=VARCHAR},
      #{phoneticSymbolEnMumbler,jdbcType=VARCHAR}, #{pronunciationEnMumbler,jdbcType=VARCHAR},
      #{phoneticSymbolUsMumbler,jdbcType=VARCHAR}, #{pronunciationUsMumbler,jdbcType=VARCHAR},
      #{meaningMumbler,jdbcType=VARCHAR}, #{phrase,jdbcType=VARCHAR}, #{favours,jdbcType=INTEGER},
      #{synonym,jdbcType=VARCHAR}, #{wordOfSimilarForm,jdbcType=VARCHAR}, #{stemAffix,jdbcType=VARCHAR},
      #{paraphrase,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yj.pojo.Dictionary" >
    insert into dictionary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="word != null" >
        word,
      </if>
      <if test="meaning != null" >
        meaning,
      </if>
      <if test="phoneticSymbolEn != null" >
        phonetic_symbol_en,
      </if>
      <if test="pronunciationEn != null" >
        pronunciation_en,
      </if>
      <if test="sentence != null" >
        sentence,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="tv != null" >
        tv,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="phoneticSymbolUs != null" >
        phonetic_symbol_us,
      </if>
      <if test="pronunciationUs != null" >
        pronunciation_us,
      </if>
      <if test="phoneticSymbol != null" >
        phonetic_symbol,
      </if>
      <if test="pronunciation != null" >
        pronunciation,
      </if>
      <if test="sentenceCn != null" >
        sentence_cn,
      </if>
      <if test="sentenceAudio != null" >
        sentence_audio,
      </if>
      <if test="realMeaning != null" >
        real_meaning,
      </if>
      <if test="phoneticSymbolEnMumbler != null" >
        phonetic_symbol_en_Mumbler,
      </if>
      <if test="pronunciationEnMumbler != null" >
        pronunciation_en_Mumbler,
      </if>
      <if test="phoneticSymbolUsMumbler != null" >
        phonetic_symbol_us_Mumbler,
      </if>
      <if test="pronunciationUsMumbler != null" >
        pronunciation_us_Mumbler,
      </if>
      <if test="meaningMumbler != null" >
        meaning_Mumbler,
      </if>
      <if test="phrase != null" >
        phrase,
      </if>
      <if test="favours != null" >
        favours,
      </if>
      <if test="synonym != null" >
        synonym,
      </if>
      <if test="wordOfSimilarForm != null" >
        word_of_similar_form,
      </if>
      <if test="stemAffix != null" >
        stem_affix,
      </if>
      <if test="paraphrase != null" >
        paraphrase,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="word != null" >
        #{word,jdbcType=VARCHAR},
      </if>
      <if test="meaning != null" >
        #{meaning,jdbcType=VARCHAR},
      </if>
      <if test="phoneticSymbolEn != null" >
        #{phoneticSymbolEn,jdbcType=VARCHAR},
      </if>
      <if test="pronunciationEn != null" >
        #{pronunciationEn,jdbcType=VARCHAR},
      </if>
      <if test="sentence != null" >
        #{sentence,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="tv != null" >
        #{tv,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="phoneticSymbolUs != null" >
        #{phoneticSymbolUs,jdbcType=VARCHAR},
      </if>
      <if test="pronunciationUs != null" >
        #{pronunciationUs,jdbcType=VARCHAR},
      </if>
      <if test="phoneticSymbol != null" >
        #{phoneticSymbol,jdbcType=VARCHAR},
      </if>
      <if test="pronunciation != null" >
        #{pronunciation,jdbcType=VARCHAR},
      </if>
      <if test="sentenceCn != null" >
        #{sentenceCn,jdbcType=VARCHAR},
      </if>
      <if test="sentenceAudio != null" >
        #{sentenceAudio,jdbcType=VARCHAR},
      </if>
      <if test="realMeaning != null" >
        #{realMeaning,jdbcType=VARCHAR},
      </if>
      <if test="phoneticSymbolEnMumbler != null" >
        #{phoneticSymbolEnMumbler,jdbcType=VARCHAR},
      </if>
      <if test="pronunciationEnMumbler != null" >
        #{pronunciationEnMumbler,jdbcType=VARCHAR},
      </if>
      <if test="phoneticSymbolUsMumbler != null" >
        #{phoneticSymbolUsMumbler,jdbcType=VARCHAR},
      </if>
      <if test="pronunciationUsMumbler != null" >
        #{pronunciationUsMumbler,jdbcType=VARCHAR},
      </if>
      <if test="meaningMumbler != null" >
        #{meaningMumbler,jdbcType=VARCHAR},
      </if>
      <if test="phrase != null" >
        #{phrase,jdbcType=VARCHAR},
      </if>
      <if test="favours != null" >
        #{favours,jdbcType=INTEGER},
      </if>
      <if test="synonym != null" >
        #{synonym,jdbcType=VARCHAR},
      </if>
      <if test="wordOfSimilarForm != null" >
        #{wordOfSimilarForm,jdbcType=VARCHAR},
      </if>
      <if test="stemAffix != null" >
        #{stemAffix,jdbcType=VARCHAR},
      </if>
      <if test="paraphrase != null" >
        #{paraphrase,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yj.pojo.Dictionary" >
    update dictionary
    <set >
      <if test="word != null" >
        word = #{word,jdbcType=VARCHAR},
      </if>
      <if test="meaning != null" >
        meaning = #{meaning,jdbcType=VARCHAR},
      </if>
      <if test="phoneticSymbolEn != null" >
        phonetic_symbol_en = #{phoneticSymbolEn,jdbcType=VARCHAR},
      </if>
      <if test="pronunciationEn != null" >
        pronunciation_en = #{pronunciationEn,jdbcType=VARCHAR},
      </if>
      <if test="sentence != null" >
        sentence = #{sentence,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="tv != null" >
        tv = #{tv,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="phoneticSymbolUs != null" >
        phonetic_symbol_us = #{phoneticSymbolUs,jdbcType=VARCHAR},
      </if>
      <if test="pronunciationUs != null" >
        pronunciation_us = #{pronunciationUs,jdbcType=VARCHAR},
      </if>
      <if test="phoneticSymbol != null" >
        phonetic_symbol = #{phoneticSymbol,jdbcType=VARCHAR},
      </if>
      <if test="pronunciation != null" >
        pronunciation = #{pronunciation,jdbcType=VARCHAR},
      </if>
      <if test="sentenceCn != null" >
        sentence_cn = #{sentenceCn,jdbcType=VARCHAR},
      </if>
      <if test="sentenceAudio != null" >
        sentence_audio = #{sentenceAudio,jdbcType=VARCHAR},
      </if>
      <if test="realMeaning != null" >
        real_meaning = #{realMeaning,jdbcType=VARCHAR},
      </if>
      <if test="phoneticSymbolEnMumbler != null" >
        phonetic_symbol_en_Mumbler = #{phoneticSymbolEnMumbler,jdbcType=VARCHAR},
      </if>
      <if test="pronunciationEnMumbler != null" >
        pronunciation_en_Mumbler = #{pronunciationEnMumbler,jdbcType=VARCHAR},
      </if>
      <if test="phoneticSymbolUsMumbler != null" >
        phonetic_symbol_us_Mumbler = #{phoneticSymbolUsMumbler,jdbcType=VARCHAR},
      </if>
      <if test="pronunciationUsMumbler != null" >
        pronunciation_us_Mumbler = #{pronunciationUsMumbler,jdbcType=VARCHAR},
      </if>
      <if test="meaningMumbler != null" >
        meaning_Mumbler = #{meaningMumbler,jdbcType=VARCHAR},
      </if>
      <if test="phrase != null" >
        phrase = #{phrase,jdbcType=VARCHAR},
      </if>
      <if test="favours != null" >
        favours = #{favours,jdbcType=INTEGER},
      </if>
      <if test="synonym != null" >
        synonym = #{synonym,jdbcType=VARCHAR},
      </if>
      <if test="wordOfSimilarForm != null" >
        word_of_similar_form = #{wordOfSimilarForm,jdbcType=VARCHAR},
      </if>
      <if test="stemAffix != null" >
        stem_affix = #{stemAffix,jdbcType=VARCHAR},
      </if>
      <if test="paraphrase != null" >
        paraphrase = #{paraphrase,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yj.pojo.Dictionary" >
    update dictionary
    set word = #{word,jdbcType=VARCHAR},
      meaning = #{meaning,jdbcType=VARCHAR},
      phonetic_symbol_en = #{phoneticSymbolEn,jdbcType=VARCHAR},
      pronunciation_en = #{pronunciationEn,jdbcType=VARCHAR},
      sentence = #{sentence,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      tv = #{tv,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      phonetic_symbol_us = #{phoneticSymbolUs,jdbcType=VARCHAR},
      pronunciation_us = #{pronunciationUs,jdbcType=VARCHAR},
      phonetic_symbol = #{phoneticSymbol,jdbcType=VARCHAR},
      pronunciation = #{pronunciation,jdbcType=VARCHAR},
      sentence_cn = #{sentenceCn,jdbcType=VARCHAR},
      sentence_audio = #{sentenceAudio,jdbcType=VARCHAR},
      real_meaning = #{realMeaning,jdbcType=VARCHAR},
      phonetic_symbol_en_Mumbler = #{phoneticSymbolEnMumbler,jdbcType=VARCHAR},
      pronunciation_en_Mumbler = #{pronunciationEnMumbler,jdbcType=VARCHAR},
      phonetic_symbol_us_Mumbler = #{phoneticSymbolUsMumbler,jdbcType=VARCHAR},
      pronunciation_us_Mumbler = #{pronunciationUsMumbler,jdbcType=VARCHAR},
      meaning_Mumbler = #{meaningMumbler,jdbcType=VARCHAR},
      phrase = #{phrase,jdbcType=VARCHAR},
      favours = #{favours,jdbcType=INTEGER},
      synonym = #{synonym,jdbcType=VARCHAR},
      word_of_similar_form = #{wordOfSimilarForm,jdbcType=VARCHAR},
      stem_affix = #{stemAffix,jdbcType=VARCHAR},
      paraphrase = #{paraphrase,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--下面是自己写的-->
  <select id="getLearnedWordNumber" resultType="string" parameterType="string">
    SELECT learned_word_number
    FROM take_plans
    WHERE plan = #{plan}
    AND user_id = #{user_id}
  </select>

  <select id="homePagePortraitMaxId" resultType="int">
    SELECT get_home_page_portrait_max
    FROM common_config
    WHERE id = 1
  </select>

  <select id="homePageFirstGet" resultType="map">
    (SELECT feeds.id,feeds.title,feeds.pic,feeds.video,feeds.likes,feeds.comments,feeds.cover_select,feeds.favours,username,portrait,`user`.id as user_id
    FROM feeds,`user`
    WHERE auther_id = `user`.id
    ORDER BY feeds.set_time DESC
    LIMIT 0,3)
    UNION
    (SELECT feeds.id,feeds.title,feeds.pic,feeds.video,feeds.likes,feeds.comments,feeds.cover_select,feeds.favours,username,portrait,`user`.id as user_id
    FROM feeds,`user`
    WHERE auther_id = `user`.id
    ORDER BY 2*feeds.comments+feeds.likes DESC
    LIMIT 0,3)
  </select>

  <select id="homePageFirstGetChange" resultType="map" parameterType="int">
    SELECT feeds.id,feeds.title,feeds.pic,feeds.video,feeds.likes,feeds.comments,feeds.cover_select,feeds.favours,username,portrait,`user`.id as user_id
    FROM feeds,`user`
    WHERE auther_id = `user`.id
    ORDER BY feeds.set_time DESC
    LIMIT #{start},6
  </select>


  <select id="authorFeeds" resultType="map">
    SELECT feeds.id,feeds.title,feeds.pic,feeds.video,feeds.likes,feeds.comments,feeds.cover_select,feeds.favours,username,portrait,`user`.id as user_id
    FROM feeds,`user`
    WHERE auther_id = #{id}
    AND auther_id = `user`.id
    ORDER BY feeds.set_time DESC
    LIMIT #{start},#{size}
  </select>

  <select id="hotRecommendations" resultType="map" parameterType="string">
    SELECT feeds.id,feeds.title,feeds.pic,feeds.video,feeds.likes,feeds.comments,feeds.cover_select,username,portrait,feeds.kind
    FROM feeds,`user`
    WHERE auther_id = `user`.id
    AND feeds.set_time > #{time}
    ORDER BY 2*feeds.comments+feeds.likes DESC
    LIMIT 0,5
  </select>

  <select id="hotComments" resultType="map" parameterType="string">
    SELECT feeds_comment.id,feeds_comment.comment,feeds_comment.set_time,feeds_comment.likes,feeds_comment.comments,username,portrait,`user`.id as user_id
    FROM feeds_comment,`user`
    WHERE user_id = `user`.id
    AND 2*feeds_comment.comments+feeds_comment.likes > 50
    AND feeds_id = #{feed_id}
    ORDER BY 2*feeds_comment.comments+feeds_comment.likes DESC
    LIMIT 0,3
  </select>

  <select id="hotCommentsYJ" resultType="map">
    SELECT video_comment.id,video_comment.comment,video_comment.set_time,username,portrait,`user`.id as user_id
    FROM video_comment,`user`
    WHERE user_id = `user`.id
    AND 3*video_comment.likes > 50
    AND video_id = #{video_id}
    ORDER BY 3*video_comment.likes DESC
    LIMIT #{start},#{size}
  </select>

  <select id="newMoreCommentsYJ" resultType="map">
    SELECT video_comment.id,video_comment.comment,video_comment.set_time,video_comment.likes,username,portrait,`user`.id as user_id
    FROM video_comment,`user`
    WHERE user_id = `user`.id
    AND video_comment.set_time > #{time}
    AND video_id = #{video_id}
    ORDER BY video_comment.set_time DESC
    LIMIT #{start},#{size}
  </select>

  <select id="newComments" resultType="map" parameterType="string">
    SELECT feeds_comment.id,feeds_comment.comment,feeds_comment.set_time,feeds_comment.likes,feeds_comment.comments,username,portrait,`user`.id as user_id
    FROM feeds_comment,`user`
    WHERE user_id = `user`.id
    AND feeds_comment.set_time > #{time}
    AND feeds_id = #{feed_id}
    ORDER BY feeds_comment.set_time DESC
    LIMIT 0,15
  </select>

  <select id="newCommentsYJ" resultType="map" parameterType="string">
    SELECT video_comment.id,video_comment.comment,video_comment.set_time,video_comment.likes,username,portrait,`user`.id as user_id
    FROM video_comment,`user`
    WHERE user_id = `user`.id
    AND video_comment.set_time > #{time}
    AND video_id = #{video_id}
    ORDER BY video_comment.set_time DESC
    LIMIT 0,15
  </select>

  <select id="getCommentByCommentId" resultType="map" parameterType="string" flushCache="true">
    SELECT `user`.id as user_id,feeds_reply_comments.id,feeds_reply_comments.comment,username,portrait,feeds_reply_comments.set_time,feeds_reply_comments.likes
    FROM feeds_reply_comments,`user`
    WHERE user_id = `user`.id
    AND feeds_reply_comments.feeds_comment_id = #{id}
  </select>

  <select id="getHotCommentsSum" resultType="int">
    SELECT COUNT(1)
    FROM feeds_comment
    WHERE 2*comments+likes > 50
    AND feeds_id = #{feed_id}
  </select>

  <select id="getNewCommentsSum" resultType="int" parameterType="string">
    SELECT COUNT(1)
    FROM feeds_comment
    WHERE feeds_comment.set_time > #{time}
    AND feeds_id = #{feed_id}
  </select>

  <select id="getFeedsCommentLike" resultType="map">
    SELECT likes,comments,favours
    FROM feeds
    WHERE id = #{id}
  </select>


  <select id="getSingleComment" resultType="map">
    SELECT feeds_comment.id,likes,comments,comment,set_time,username,`user`.id as user_id,portrait
    FROM feeds_comment,`user`
    WHERE feeds_comment.id = #{id}
    AND `user`.id = user_id
  </select>

  <select id="getDailyPicFavour" resultType="map">
    SELECT favours
    FROM daily_pic
    WHERE id = #{id}
  </select>



  <select id="getDictionaryFavours" resultType="map">
    SELECT favours
    FROM dictionary
    WHERE id = #{id}
  </select>



  <select id="getLikeOfFeedsComment" resultType="map">
    SELECT likes
    FROM feeds_comment
    WHERE id = #{id}
  </select>

  <select id="getInsistDayMessage" resultType="map">
    SELECT *
    FROM insist_day
    WHERE user_id = #{user_id}
    AND plan = #{plan}
    AND set_time = #{time}
    LIMIT 1
  </select>

  <select id="getLikeOfFeedsReplyComment" resultType="map">
    SELECT likes
    FROM feeds_reply_comments
    WHERE id = #{id}
  </select>

  <select id="getCommentOfFeedsComment" resultType="map">
    SELECT *
    FROM feeds_comment
    WHERE id = #{id}
  </select>

  <select id="getFeedsReplayComment" resultType="map">
    SELECT *
    FROM feeds_reply_comments
    WHERE id = #{id}
  </select>

  <select id="getYJComment" resultType="map">
    SELECT *
    FROM video_comment
    WHERE id = #{id}
  </select>

  <select id="getVideoLikeOfComment" resultType="map">
    SELECT likes
    FROM video_comment
    WHERE id = #{id}
  </select>

  <select id="getYJCommentLike" resultType="map">
    SELECT comments,favours
    FROM word_video_information
    WHERE id = #{id}
  </select>

  <select id="findIsLike" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM feeds_like
    WHERE user_id = #{user_id}
    AND feeds_id = #{feeds_id}
  </select>


  <select id="findFeedsCommentIsLike" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM feeds_comment_like
    WHERE user_id = #{user_id}
    AND feeds_comment_id = #{feeds_comment_id}
  </select>

  <select id="findFeedsReplyCommentIsLike" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM feeds_reply_comment_like
    WHERE user_id = #{user_id}
    AND feeds_reply_comment_id = #{feeds_reply_comment_id}
  </select>

  <select id="findYJCommentIsLike" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM video_comment_like
    WHERE user_id = #{user_id}
    AND video_comment_id = #{video_comment_id}
  </select>

  <select id="findIsFavour" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM feeds_favour
    WHERE user_id = #{user_id}
    AND feeds_id = #{feeds_id}
  </select>

  <select id="findDailyPicIsFavour" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM daily_pic_favour
    WHERE user_id = #{user_id}
    AND daily_pic_id = #{daily_pic_id}
  </select>

  <select id="findDictionaryIsFavour" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM dictionary_favour
    WHERE user_id = #{user_id}
    AND word_id = #{word_id}
  </select>

  <select id="findYJIsFavour" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM video_favour
    WHERE user_id = #{user_id}
    AND video_id = #{yj_id}
  </select>

  <select id="commentFindIsLike" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM feeds_comment_like
    WHERE user_id = #{user_id}
    AND feeds_comment_id = #{id}
  </select>


  <select id="commentReplyFindIsLike" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM feeds_reply_comment_like
    WHERE user_id = #{user_id}
    AND feeds_reply_comment_id = #{id}
  </select>


  <select id="VideoCommentIsLike" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM video_comment_like
    WHERE user_id = #{user_id}
    AND video_comment_id = #{video_comment_id}
  </select>

  <select id="findFeedsInner" resultType="map" parameterType="string">
    SELECT paragraph,type,pic,`order`
    FROM feeds_inner
    WHERE feeds_id = #{feeds_id}
    ORDER BY `order` ASC
  </select>

  <select id="singleFeeds" resultType="map" parameterType="string">
    SELECT feeds.id,title,feeds.pic,feeds.video,feeds.likes,feeds.comments,feeds.cover_select,username,portrait,feeds.favours,`user`.id as user_id
    FROM feeds,`user`
    WHERE feeds.id = #{id}
    AND auther_id = `user`.id
  </select>

  <update id="changeFeedsComments" parameterType="string">
    UPDATE feeds
    set comments = #{comments}
    WHERE id = #{id}
  </update>

  <update id="changeVideoComments" parameterType="string">
    UPDATE word_video_information
    set comments = #{comments}
    WHERE id = #{id}
  </update>

  <update id="changeFeedsLikes" parameterType="string">
    UPDATE feeds
    set likes = #{likes}
    WHERE id = #{id}
  </update>


  <update id="changeFeedsCommentLikes" parameterType="string">
    UPDATE feeds_comment
    set likes = #{likes}
    WHERE id = #{id}
  </update>

  <update id="changeFeedsReplyCommentLikes" parameterType="string">
    UPDATE feeds_reply_comments
    set likes = #{likes}
    WHERE id = #{id}
  </update>


  <update id="changeFeedsCommentComments" parameterType="string">
    UPDATE feeds_comment
    set comments = #{comments}
    WHERE id = #{id}
  </update>

  <update id="changeYJComments" parameterType="string">
    UPDATE word_video_information
    set comments = #{comments}
    WHERE id = #{id}
  </update>

  <update id="changeVideoLikes" parameterType="string">
    UPDATE video_comment
    set likes = #{likes}
    WHERE id = #{id}
  </update>

  <update id="changeFeedsFavour" parameterType="string">
    UPDATE feeds
    set favours = #{favours}
    WHERE id = #{id}
  </update>

  <update id="changeDailyPicFavour" parameterType="string">
    UPDATE daily_pic
    set favours = #{favours}
    WHERE id = #{id}
  </update>

  <update id="changeDictionaryFavour" parameterType="string">
    UPDATE dictionary
    set favours = #{favours}
    WHERE id = #{id}
  </update>

  <update id="changeYJFavour" parameterType="string">
    UPDATE word_video_information
    set favours = #{favours}
    WHERE id = #{id}
  </update>

  <update id="changeInsistDayStatus">
    UPDATE insist_day
    set is_correct = #{is_correct},
    `today_word_number` = today_word_number + #{today_word_number}
    WHERE plan = #{plan}
    AND set_time = #{set_time}
    AND user_id = #{user_id}
  </update>

  <update id="changeUserInsistDayStatus" parameterType="string">
    UPDATE `user`
    set insist_day = insist_day + 1
    WHERE id = #{id}
  </update>

  <update id="changeUserClockDayStatus" parameterType="string">
    UPDATE `user`
    set clock_day = clock_day + 1
    WHERE id = #{id}
  </update>

  <select id="randSelectVideo" resultType="map" parameterType="int">
    SELECT dictionary.word,tb.*
    FROM
    (select * from word_video_information
    order by rand() limit #{size}) tb
    JOIN dictionary
    ON dictionary.id = tb.word_id
  </select>

  <select id="yjFourWord" resultType="map">
    SELECT dictionary.phonetic_symbol,tb1.*
    FROM (SELECT tb.*,word_video_information.img,word_video_information.views,word_video_information.comments,word_video_information.favours,
    word_video_information.video,word_video_information.id as video_id
    FROM
    (select word,word_id
    from reciting_words
    WHERE user_id = #{id}
    order by `level` DESC
    LIMIT #{start},#{size}) tb
    JOIN word_video_information
    ON tb.word_id = word_video_information.word_id) tb1
    JOIN dictionary
    ON tb1.word_id = dictionary.id
  </select>


  <select id="yjFourWordWhenNotFount" resultType="map" parameterType="int">
    SELECT tb.*,word_video_information.img,word_video_information.views,word_video_information.comments,word_video_information.favours,
    word_video_information.video,word_video_information.id as video_id
    FROM
    (select word,id as word_id,dictionary.phonetic_symbol
    from dictionary
    order by rand() limit #{size}) tb
    JOIN word_video_information
    ON tb.word_id = word_video_information.word_id
  </select>

  <select id="reciting_words_exist" resultType="int" parameterType="string">
    select COUNT(id)
    from reciting_words
    WHERE user_id = #{id}
    LIMIT 1
  </select>


  <update id="updateWordInfo" parameterType="string">
    UPDATE `dictionary` SET
    `word`= #{word},
    `meaning`= #{meaning},
    `phonetic_symbol_en`=#{phonetic_symbol_en},
    `sentence`=#{sentence},
    `phonetic_symbol_us`=#{phonetic_symbol_us},
    `phonetic_symbol`=#{phonetic_symbol},
    `sentence_cn`=#{sentence_cn},
    `real_meaning`=#{real_meaning},
    `phonetic_symbol_en_Mumbler`=#{phonetic_symbol_en_Mumbler},
    `phonetic_symbol_us_Mumbler`=#{phonetic_symbol_us_Mumbler},
    `meaning_Mumbler`=#{meaning_Mumbler}
    WHERE id = #{id}
  </update>

  <update id="addViews" parameterType="string">
    UPDATE word_video_information
    SET views = views + 1
    WHERE id = #{id}
  </update>

  <update id="updateWordSent" parameterType="string">
    UPDATE `dictionary` SET
    `sentence`=#{sentence},
    `sentence_cn`=#{sentence_cn}
    WHERE id = #{id}
  </update>



  <update id="updateWordPic" parameterType="string">
    UPDATE `dictionary` SET
    `pic`= #{pic}
    WHERE word = #{word}
  </update>

  <update id="updateWordSentenceAudio" parameterType="string">
    UPDATE `dictionary` SET
    `sentence_audio`= #{audio}
    WHERE id = #{id}
  </update>

  <update id="updateWordSentenceAudioByWord" parameterType="string">
    UPDATE `dictionary` SET
    `sentence_audio`= #{audio}
    WHERE word = #{word}
  </update>

  <update id="updateLearnedWord">
    UPDATE `take_plans` SET
    `learned_word_number`= learned_word_number + #{learned_word_number}
    WHERE plan = #{plan}
    AND user_id = #{id}
  </update>

  <insert id="insertFeedsComment" parameterType="string">
    INSERT INTO feeds_comment (user_id, comment, feeds_id, set_time)
    values (#{user_id}, #{comment}, #{feeds_id}, #{set_time})
  </insert>

  <select id="show_word_note" parameterType="string" resultType="string">
    select word_note
    from word_note
    WHERE user_id = #{user_id}
    AND word_id = #{word_id}
  </select>

  <update id="updateWordNote" parameterType="string">
    UPDATE `word_note` SET
    `word_note`= #{word_note}
    WHERE user_id = #{user_id}
    AND word_id = #{word_id}
  </update>

  <insert id="upload_word_note" parameterType="string">
    INSERT INTO word_note (user_id, word_id, word_note, set_time)
    values (#{user_id}, #{word_id}, #{word_note}, #{set_time})
  </insert>

  <insert id="insertDailyPic" parameterType="string">
    INSERT INTO daily_pic (small_pic, daily_pic, favours, set_time)
    values (#{small_pic}, #{daily_pic}, 0, #{set_time})
  </insert>

  <insert id="insertAuthorId" parameterType="string">
    INSERT INTO author_info (user_id)
    values (#{user_id})
  </insert>

  <insert id="insertVideoComment" parameterType="string">
    INSERT INTO video_comment (user_id, comment, video_id, set_time)
    values (#{user_id}, #{comment}, #{video_id}, #{set_time})
  </insert>

  <insert id="insertInsistDay">
    INSERT INTO insist_day (user_id, plan, set_time,today_word_number,is_correct)
    values (#{user_id}, #{plan}, #{set_time},#{today_word_number},#{is_correct})
  </insert>

  <update id="updateInsistDay">
    UPDATE `insist_day` SET
    `is_correct`= #{is_correct}
    WHERE plan = #{plan}
    AND user_id = #{user_id}
    AND set_time = #{set_time}
  </update>

  <insert id="insertFeedsCommentLike" parameterType="string">
    INSERT INTO feeds_comment_like (user_id, feeds_comment_id, set_time)
    values (#{user_id}, #{feeds_comment_id}, #{set_time})
  </insert>

  <insert id="insertFeedsReplyCommentLike" parameterType="string">
    INSERT INTO feeds_reply_comment_like (user_id, feeds_reply_comment_id, set_time)
    values (#{user_id}, #{feeds_reply_comment_id}, #{set_time})
  </insert>


  <insert id="insertFeedsCommentComment" parameterType="string">
    INSERT INTO feeds_reply_comments (user_id, feeds_comment_id, set_time,comment)
    values (#{user_id}, #{feeds_comment_id}, #{set_time}, #{comment})
  </insert>

  <insert id="insertFeedsLike" parameterType="string">
    INSERT INTO feeds_like (user_id, feeds_id, set_time)
    values (#{user_id}, #{feeds_id}, #{set_time})
  </insert>

  <insert id="insertVideoLike" parameterType="string">
    INSERT INTO video_comment_like (user_id, video_comment_id, set_time)
    values (#{user_id}, #{video_comment_id}, #{set_time})
  </insert>

  <insert id="insertFeedsFavour" parameterType="string">
    INSERT INTO feeds_favour (user_id, feeds_id, set_time)
    values (#{user_id}, #{feeds_id}, #{set_time})
  </insert>

  <insert id="insertDailyPicFavour" parameterType="string">
    INSERT INTO daily_pic_favour (user_id, daily_pic_id, set_time)
    values (#{user_id}, #{daily_pic_id}, #{set_time})
  </insert>

  <insert id="insertDictionaryFavour" parameterType="string">
    INSERT INTO dictionary_favour (user_id, word_id, set_time)
    values (#{user_id}, #{word_id}, #{set_time})
  </insert>

  <insert id="insertVideoFavour" parameterType="string">
    INSERT INTO video_favour (user_id, video_id, set_time)
    values (#{user_id}, #{video_id}, #{set_time})
  </insert>

  <delete id="deleteFeedsLike" parameterType="string" >
    delete from feeds_like
    WHERE user_id = #{user_id}
    AND feeds_id = #{feeds_id}
  </delete>

  <delete id="deleteFeedsCommentAllLike" parameterType="string" >
    delete from feeds_comment_like
    WHERE feeds_comment_id = #{feeds_comment_id}
  </delete>

  <delete id="deleteFeedsCommentLike" parameterType="string" >
    delete from feeds_comment_like
    WHERE user_id = #{user_id}
    AND feeds_comment_id = #{feeds_comment_id}
  </delete>

  <delete id="deleteFeedsReplyCommentLike" parameterType="string" >
    delete from feeds_reply_comment_like
    WHERE user_id = #{user_id}
    AND feeds_reply_comment_id = #{feeds_reply_comment_id}
  </delete>

  <delete id="deleteFeedsCommentComment" parameterType="string" >
    delete from feeds_reply_comments
    WHERE user_id = #{user_id}
    AND id = #{id}
  </delete>

  <delete id="deleteFeedsCommentAllComment" parameterType="string" >
    delete from feeds_reply_comments
    WHERE feeds_comment_id = #{comment_id}
  </delete>

  <delete id="deleteFeedsComment" parameterType="string" >
    delete from feeds_comment
    WHERE user_id = #{user_id}
    AND id = #{id}
  </delete>


  <delete id="deleteYJComment" parameterType="string" >
    delete from video_comment
    WHERE user_id = #{user_id}
    AND id = #{id}
  </delete>

  <delete id="deleteYJCommentLike" parameterType="string" >
    delete from feeds_comment_like
    WHERE feeds_comment_id = #{id}
  </delete>

  <delete id="deleteVideoCommentLike" parameterType="string" >
    delete from video_comment_like
    WHERE user_id = #{user_id}
    AND video_comment_id = #{video_comment_id}
  </delete>

  <delete id="deleteFeedsFavour" parameterType="string" >
    delete from feeds_favour
    WHERE user_id = #{user_id}
    AND feeds_id = #{feeds_id}
  </delete>

  <delete id="deleteDailyPicFavour" parameterType="string" >
    delete from daily_pic_favour
    WHERE user_id = #{user_id}
    AND daily_pic_id = #{daily_pic_id}
  </delete>


  <delete id="deleteDailyPicFavourAdmin" parameterType="string" >
    delete from daily_pic_favour
    WHERE daily_pic_id = #{id}
  </delete>

  <delete id="deleteAuthorRecord" parameterType="string" >
    delete from author_info
    WHERE user_id = #{id}
  </delete>

  <delete id="deleteVirtualRecord" parameterType="string" >
    delete from virtual_user
    WHERE user_id = #{id}
  </delete>

  <delete id="deleteLotteryDrawContestants" parameterType="string" >
    delete from lottery_draw_contestants
    WHERE lottery_draw_id = #{id}
  </delete>

  <delete id="deleteLotteryDrawWinner" parameterType="string" >
    delete from lottery_draw_winner
    WHERE lottery_draw_id = #{id}
  </delete>

  <delete id="deleteDictionaryFavour" parameterType="string" >
    delete from dictionary_favour
    WHERE user_id = #{user_id}
    AND word_id = #{word_id}
  </delete>

  <delete id="deleteVideoFavour" parameterType="string" >
    delete from video_favour
    WHERE user_id = #{user_id}
    AND video_id = #{video_id}
  </delete>

  <select id="selectRecitingWords" resultType="map">
    SELECT word_id as id,word,real_meaning as meaning
    FROM reciting_words
    WHERE plan = #{plan}
    AND user_id = #{id}
    ORDER BY word
    LIMIT #{param1},#{param2}
  </select>

  <select id="getWordByType" resultType="map" parameterType="int">
    SELECT id,sentence
    FROM dictionary
    WHERE type = #{type}
    LIMIT #{start},#{size}
  </select>

  <select id="selectAdminWords" resultType="map">
    SELECT *
    FROM dictionary
    WHERE type = #{type}
    ORDER BY id
    LIMIT #{param1},#{param2}
  </select>

  <select id="selectAdminWordsForSelect" resultType="map">
    SELECT *
    FROM dictionary
    WHERE type = #{type}
    AND word LIKE #{condition}
    ORDER BY id
    LIMIT #{param1},#{param2}
  </select>

  <select id="selectSingleTypeWordForUnique" resultType="map" parameterType="string">
    SELECT id,word,`type`
    FROM dictionary
    WHERE type = #{type}
    ORDER BY id
  </select>

  <delete id="deleteRepeatWord" parameterType="string">
    DELETE FROM dictionary
    WHERE id != #{word_id}
    AND `type` = #{type}
    AND word = #{word}
  </delete>

  <select id="countWord" resultType="string">
    SELECT count(id)
    FROM dictionary
    WHERE type = #{type}
  </select>

  <select id="countDailyPic" resultType="string">
    SELECT count(id)
    FROM daily_pic
  </select>

  <select id="countFeeds" resultType="string">
    SELECT count(id)
    FROM feeds
  </select>

  <select id="countDataInfo" resultType="string">
    SELECT count(id)
    FROM data_info
  </select>

  <select id="countFeedsAuthor" resultType="string">
    SELECT count(id)
    FROM author_info
  </select>

  <select id="countVirtualUser" resultType="string">
    SELECT count(id)
    FROM virtual_user
  </select>

  <select id="countVirtualUserChallenge" resultType="string">
    SELECT count(id)
    FROM virtual_user_challenge
  </select>

  <select id="countAdvice" resultType="string">
    SELECT count(id)
    FROM advice
  </select>

  <select id="countWelfareService" resultType="string">
    SELECT count(id)
    FROM welfare_service
  </select>

  <select id="countReadClassBook" resultType="string">
    SELECT count(id)
    FROM read_class_book
  </select>

  <select id="countReadClassBookChapter" resultType="string">
    SELECT count(id)
    FROM read_class_chapter
  </select>


  <select id="countWithDrawCash" resultType="string">
    SELECT count(id)
    FROM withdraw_cash
  </select>

  <select id="countUsers" resultType="string">
    SELECT count(id)
    FROM `user`
  </select>

  <select id="countLotteryDraw" resultType="string">
    SELECT count(id)
    FROM `lottery_draw`
  </select>

  <select id="countWordChallenge" resultType="string">
    SELECT count(id)
    FROM `word_challenge`
  </select>

  <select id="selectAdminVideo" resultType="map" parameterType="string">
    SELECT *
    FROM word_video_information
    WHERE word_id = #{id}
  </select>

  <select id="selectAdminVideoByVideoId" resultType="map" parameterType="string">
    SELECT *
    FROM word_video_information
    WHERE id = #{id}
  </select>

  <select id="BetterSelectAdminVideo" resultType="map" parameterType="string">
    SELECT *
    FROM word_video_information,subtitles
    WHERE word_id = #{id}
    AND video_id = word_video_information.id
  </select>

  <select id="selectAdminSubtitles" resultType="map" parameterType="string">
    SELECT *
    FROM subtitles
    WHERE video_id = #{id}
  </select>

  <select id="getInfoByWordId" resultType="map" parameterType="string">
    SELECT *
    FROM dictionary
    WHERE id = #{id}
  </select>

  <select id="selectAdminPlanType" resultType="map">
    SELECT plan,dictionary_type
    FROM plans
  </select>

  <select id="selectPlanType" resultType="string">
    SELECT dictionary_type
    FROM plans
    WHERE plan = #{plan}
  </select>

  <select id="selectMasteredWords" resultType="map">
    SELECT word_id as id,word,meaning
    FROM mastered_words
    WHERE plan = #{plan}
    AND user_id = #{id}
    ORDER BY word
    LIMIT #{param1},#{param2}
  </select>

  <select id="getNewWord" resultType="map">
    SELECT * FROM dictionary
    WHERE id NOT IN
    (SELECT word_id FROM
    (SELECT word_id FROM reciting_words WHERE plan = #{plan} AND user_id = #{id}
    UNION
    SELECT word_id FROM mastered_words WHERE plan = #{plan} AND user_id = #{id}) tb)
    AND `type` = #{plan_id}
    LIMIT 0,#{size}
  </select>

  <select id="getOnesPlans" resultType="map" parameterType="string">
    SELECT take_plans.plan,take_plans.learned_word_number,plans.word_number
    FROM take_plans,plans
    WHERE take_plans.user_id = #{id}
    AND take_plans.plan_id = plans.id
  </select>

  <select id="getSingleWordInfo" resultType="map" parameterType="string">
    SELECT * FROM dictionary
    WHERE id = #{id}
  </select>

  <select id="getSingleSubtitleInfo" resultType="map" parameterType="string">
    SELECT st,et,en,cn FROM subtitles
    WHERE video_id = #{video_id}
    ORDER BY id ASC
  </select>

  <select id="getOldWord" resultType="map">
    SELECT dictionary.*,reciting_words.`level` FROM dictionary,reciting_words
    WHERE user_id = #{id}
    AND plan = #{plan}
    AND dictionary.id = word_id
    AND `level` = 2
    AND set_time &lt; #{two_day}
    UNION
    SELECT dictionary.*,reciting_words.`level` FROM dictionary,reciting_words
    WHERE user_id = #{id}
    AND plan = #{plan}
    AND dictionary.id = word_id
    AND `level` = 3
    AND set_time &lt; #{two_week}
    UNION
    SELECT dictionary.*,reciting_words.`level` FROM dictionary,reciting_words
    WHERE user_id = #{id}
    AND plan = #{plan}
    AND dictionary.id = word_id
    AND `level` = 4
    AND set_time &lt; #{last_month}
  </select>

  <insert id="insertMasteredWord" parameterType="string">
    INSERT INTO mastered_words (word_id, user_id, set_time, plan, word, meaning,real_meaning) values (#{word_id}, #{user_id}, #{right_time}, #{plan}, #{word},#{meaning},#{meaning})
  </insert>

  <insert id="insertNewWord2MasteredWord" parameterType="string">
    INSERT INTO mastered_words (word_id, user_id, set_time, plan, word, meaning,real_meaning,register_time)
    values (#{word_id}, #{user_id}, #{right_time}, #{plan}, #{word},#{meaning},#{meaning},#{register_time})
  </insert>

  <select id="selectMasteredWord" parameterType="string" resultType="string">
    SELECT id FROM mastered_words WHERE word_id=#{word_id} AND set_time = #{right_time} AND user_id = #{user_id} AND plan = #{plan}
    LIMIT 1
  </select>

  <select id="countTodayUploadWord" parameterType="string" resultType="map">
    (SELECT id FROM mastered_words WHERE register_time > #{today_zero} AND user_id = #{user_id})
    UNION
    (SELECT id FROM reciting_words WHERE register_time > #{today_zero} AND user_id = #{user_id})
  </select>

  <delete id="deleteRecitingWord" parameterType="string">
    DELETE FROM reciting_words
    WHERE word_id=#{word_id}
    AND user_id = #{user_id}
    AND plan = #{plan}
  </delete>

  <insert id="insertRecitingWord" parameterType="string">
    INSERT INTO reciting_words (word_id, user_id, set_time, plan, word, meaning, real_meaning, register_time)
    values (#{word_id}, #{user_id}, #{right_time}, #{plan}, #{word}, #{meaning}, #{meaning}, #{register_time})
  </insert>

  <update id="updateRecitingWord" parameterType="string">
    UPDATE `reciting_words` SET
    `set_time`= #{right_time},
    `level`= #{level}
    WHERE word_id = #{word_id}
    AND user_id = #{user_id}
    AND plan = #{plan}
  </update>

  <select id="selectRecitingWord" parameterType="string" resultType="string">
    SELECT id FROM reciting_words WHERE word_id=#{word_id} AND user_id = #{user_id} AND plan = #{plan}
    LIMIT 1
  </select>

  <select id="getVideoInfoByWordId" resultType="map" parameterType="string">
    SELECT tb.*,st,et,en,cn FROM subtitles,(SELECT * FROM word_video_information
    WHERE word_video_information.word_id = #{id}
    LIMIT 0,3) tb WHERE tb.id = subtitles.video_id
  </select>

  <!--获取三条视频信息不含字幕-->
  <select id="getVideoInfoByWordIdWithOutSubtitles" resultType="map" parameterType="string">
    SELECT * FROM word_video_information
    WHERE word_video_information.word_id = #{id}
    LIMIT 3
  </select>

  <select id="selectNotMemorizingWords" resultType="map">
    SELECT id,word,real_meaning
    FROM dictionary
    WHERE id NOT IN
    (SELECT word_id
    FROM reciting_words
    WHERE plan = #{plan}
    AND user_id = #{id}
    UNION
    SELECT word_id
    FROM mastered_words
    WHERE plan = #{plan}
    AND user_id = #{id})
    AND type = #{type}
    ORDER BY word
    LIMIT #{param1},#{param2}
  </select>

  <select id="selectRecitingWordsAll" resultType="map" parameterType="string">
    SELECT word_id as id,word,read_meaning as meaning
    FROM reciting_words
    WHERE plan = #{plan}
    AND user_id = #{id}
    ORDER BY word
  </select>

  <select id="countRecitingWords" resultType="string" parameterType="string">
    SELECT count(word_id)
    FROM reciting_words
    WHERE plan = #{plan}
    AND user_id = #{id}
    ORDER BY word
  </select>

  <select id="welfareServiceOnlineNumber" resultType="int" parameterType="string">
    SELECT COUNT(id)
    FROM welfare_service
    WHERE st &lt; #{time}
    AND et &gt; #{time}
  </select>

  <select id="welfareServiceOnlineLack" resultType="map">
    SELECT *
    FROM welfare_service
    WHERE st &lt; #{time}
    AND et &gt; #{time}
    UNION
    SELECT *
    FROM welfare_service
    WHERE st &gt;= #{time}
    OR et &lt;= #{time}
    ORDER BY `order` DESC ,abs(st-#{time}) ASC
    LIMIT #{number}
  </select>

  <select id="welfareServiceOnlineAll" resultType="map" parameterType="string">
    SELECT *
    FROM welfare_service
    WHERE st &lt; #{time}
    AND et &gt; #{time}
    ORDER BY `order` DESC ,abs(st-#{time}) ASC
  </select>

  <select id="welfareServiceAll" resultType="map">
    SELECT *
    FROM welfare_service
    ORDER BY `order` DESC ,abs(st-#{time}) ASC
    LIMIT #{start},#{size}
  </select>

  <select id="showUsers" resultType="map">
    SELECT id,username,gender,phone,register_time,last_login
    FROM `user`
    LIMIT #{start},#{size}
  </select>

  <select id="showLotteryDraw" resultType="map">
    SELECT *
    FROM `lottery_draw`
    ORDER BY set_time DESC
    LIMIT #{start},#{size}
  </select>

  <select id="showWordChallenge" resultType="map">
    SELECT *
    FROM `word_challenge`
    ORDER BY et DESC
    LIMIT #{start},#{size}
  </select>

  <select id="isWelfareFavour" resultType="map" parameterType="string">
    SELECT id,set_time
    FROM daily_pic_favour
    WHERE user_id = #{id}
    AND daily_pic_id = #{daily_pic_id}
  </select>

  <select id="selectAllWord" resultType="map" parameterType="string">
    SELECT id,sentence
    FROM dictionary
    WHERE word = #{word}
  </select>

  <delete id="deleteWordInfo" parameterType="string">
    DELETE FROM dictionary
    WHERE word = #{word}
  </delete>

  <delete id="deleteDailyPic" parameterType="string">
    DELETE FROM daily_pic
    WHERE id = #{id}
  </delete>

  <delete id="deleteWelfareService" parameterType="string">
    DELETE FROM welfare_service
    WHERE id = #{id}
  </delete>

  <delete id="deleteFeedsAuthor" parameterType="string">
    DELETE FROM `user`
    WHERE id = #{id}
  </delete>

  <delete id="deleteLotteryDraw" parameterType="string">
    DELETE FROM `lottery_draw`
    WHERE id = #{id}
  </delete>

  <delete id="deleteWordSub" parameterType="string">
    DELETE FROM subtitles
    WHERE video_id IN (SELECT id
    FROM word_video_information
    WHERE word_id IN (SELECT id
    FROM dictionary WHERE word = #{word}))
  </delete>

  <delete id="deleteWordVideo" parameterType="string">
    DELETE FROM word_video_information
    WHERE word_id IN (SELECT id
    FROM dictionary WHERE word = #{word})
  </delete>

  <delete id="existWordVideo" parameterType="string">
    SELECT COUNT(id) FROM word_video_information
    WHERE word_id IN (SELECT id
    FROM dictionary WHERE word = #{word})
  </delete>

  <select id="selectMasteredWordsAll" resultType="map" parameterType="string">
    SELECT word_id as id,word,meaning
    FROM mastered_words
    WHERE plan = #{plan}
    AND user_id = #{id}
    ORDER BY word
  </select>

  <select id="countMasteredWords" resultType="string" parameterType="string">
    SELECT count(word_id)
    FROM mastered_words
    WHERE plan = #{plan}
    AND user_id = #{id}
    ORDER BY word
  </select>

  <select id="selectNotMemorizingWordsAll" resultType="map" parameterType="string">
    SELECT id,word,real_meaning
    FROM dictionary
    WHERE id NOT IN
    (SELECT word_id
    FROM reciting_words
    WHERE plan = #{plan}
    AND user_id = #{id}
    UNION
    SELECT word_id
    FROM mastered_words
    WHERE plan = #{plan}
    AND user_id = #{id})
    AND type = #{type}
    ORDER BY word
  </select>
</mapper>