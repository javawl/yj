<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yj.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.yj.pojo.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="portrait" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="my_plan" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="plan_days" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="plan_words_number" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="personality_signature" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="wechat" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="qq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="register_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="last_login" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="insist_day" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="whether_open" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="clock_day" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, portrait, phone, gender, my_plan, plan_days, plan_words_number, 
    personality_signature, wechat, qq, register_time, last_login, insist_day, whether_open, 
    clock_day
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yj.pojo.User" >
    insert into user (id, username, password, 
      portrait, phone, gender, 
      my_plan, plan_days, plan_words_number, 
      personality_signature, wechat, qq, 
      register_time, last_login, insist_day, 
      whether_open, clock_day)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{portrait,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{myPlan,jdbcType=VARCHAR}, #{planDays,jdbcType=INTEGER}, #{planWordsNumber,jdbcType=INTEGER}, 
      #{personalitySignature,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{registerTime,jdbcType=VARCHAR}, #{lastLogin,jdbcType=VARCHAR}, #{insistDay,jdbcType=INTEGER}, 
      #{whetherOpen,jdbcType=INTEGER}, #{clockDay,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yj.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="portrait != null" >
        portrait,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="myPlan != null" >
        my_plan,
      </if>
      <if test="planDays != null" >
        plan_days,
      </if>
      <if test="planWordsNumber != null" >
        plan_words_number,
      </if>
      <if test="personalitySignature != null" >
        personality_signature,
      </if>
      <if test="wechat != null" >
        wechat,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="insistDay != null" >
        insist_day,
      </if>
      <if test="whetherOpen != null" >
        whether_open,
      </if>
      <if test="clockDay != null" >
        clock_day,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="myPlan != null" >
        #{myPlan,jdbcType=VARCHAR},
      </if>
      <if test="planDays != null" >
        #{planDays,jdbcType=INTEGER},
      </if>
      <if test="planWordsNumber != null" >
        #{planWordsNumber,jdbcType=INTEGER},
      </if>
      <if test="personalitySignature != null" >
        #{personalitySignature,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="insistDay != null" >
        #{insistDay,jdbcType=INTEGER},
      </if>
      <if test="whetherOpen != null" >
        #{whetherOpen,jdbcType=INTEGER},
      </if>
      <if test="clockDay != null" >
        #{clockDay,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yj.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        portrait = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="myPlan != null" >
        my_plan = #{myPlan,jdbcType=VARCHAR},
      </if>
      <if test="planDays != null" >
        plan_days = #{planDays,jdbcType=INTEGER},
      </if>
      <if test="planWordsNumber != null" >
        plan_words_number = #{planWordsNumber,jdbcType=INTEGER},
      </if>
      <if test="personalitySignature != null" >
        personality_signature = #{personalitySignature,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="insistDay != null" >
        insist_day = #{insistDay,jdbcType=INTEGER},
      </if>
      <if test="whetherOpen != null" >
        whether_open = #{whetherOpen,jdbcType=INTEGER},
      </if>
      <if test="clockDay != null" >
        clock_day = #{clockDay,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yj.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      portrait = #{portrait,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      my_plan = #{myPlan,jdbcType=VARCHAR},
      plan_days = #{planDays,jdbcType=INTEGER},
      plan_words_number = #{planWordsNumber,jdbcType=INTEGER},
      personality_signature = #{personalitySignature,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=VARCHAR},
      insist_day = #{insistDay,jdbcType=INTEGER},
      whether_open = #{whetherOpen,jdbcType=INTEGER},
      clock_day = #{clockDay,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--下面是自己建的-->
  <select id="checkUser" resultType="int" parameterType="string" >
    SELECT COUNT(1) FROM user
    WHERE phone = #{phone}
  </select>
  <select id="checkUsername" resultType="int" parameterType="string" >
    SELECT COUNT(1) FROM user
    WHERE username = #{username}
  </select>
  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List" />
    FROM user
    WHERE phone = #{username}
    AND password = #{password}
  </select>
  <!--<select id="getIdByPhone" resultType="map" parameterType="string">-->
  <!--SELECT-->
  <!--id-->
  <!--FROM user-->
  <!--WHERE phone = #{phone}-->
  <!--</select>-->
  <select id="getIdByPhone" resultType="int" parameterType="string">
    SELECT
    IFNULL(MIN(id),0)
    FROM user
    WHERE phone = #{phone}
  </select>

  <update id="updatePassword" parameterType="string" >
    UPDATE user
    set password = #{password}
    WHERE phone = #{phone}
  </update>

  <update id="updateDataDailyAddUser" parameterType="string" >
    UPDATE data_info
    set daily_add_user = daily_add_user + 1
    WHERE set_time = #{set_time}
  </update>

  <select id="selectPlanTypes" resultType="map" >
    SELECT
    type
    FROM plan_types
  </select>

  <select id="selectPlanByType" resultType="map" parameterType="string">
    SELECT plan,word_number
    FROM plans
    WHERE (SELECT id
    FROM plan_types
    WHERE type = #{type})
    = type_id
  </select>

  <select id="getTypeByPlan" resultType="string" parameterType="string">
    SELECT dictionary_type
    FROM plans
    WHERE plan = #{plan}
  </select>


  <select id="getMyPlanWordsNumber" resultType="int" parameterType="string">
    SELECT CASE WHEN (SELECT my_plan
    FROM user
    WHERE id = #{id})
    IS NULL THEN 0
    ELSE (SELECT word_number
    FROM plans
    WHERE (SELECT my_plan
    FROM user
    WHERE id = #{id})= plan)
    END
  </select>


  <select id="getPlanWordsNumberByPlan" resultType="string" parameterType="string">
    SELECT  word_number
    FROM plans
    WHERE plan = #{plan}
  </select>

  <select id="getAuthorInfo" resultType="map" parameterType="string">
    SELECT  portrait,gender,username,personality_signature,insist_day,my_plan,whether_open
    FROM `user`
    WHERE id = #{id}
  </select>

  <select id="getDailyPic" resultType="map">
    SELECT tb.daily_pic,tb.id,tb.set_time as pic_time,daily_pic_favour.set_time as favour_time
    FROM (SELECT  id,daily_pic,set_time
    FROM `daily_pic`
    ORDER BY set_time desc
    LIMIT #{start},#{size}) tb
    LEFT JOIN daily_pic_favour
    ON tb.id = daily_pic_favour.daily_pic_id
    AND daily_pic_favour.user_id = #{id}
  </select>


  <select id="getDailyPicInfo" resultType="map">
    SELECT  id,daily_pic,set_time,small_pic
    FROM `daily_pic`
    ORDER BY set_time desc
    LIMIT #{start},#{size}
  </select>

  <select id="getFeedsInfo" resultType="map">
    SELECT  id,title,set_time
    FROM `feeds`
    ORDER BY set_time desc
    LIMIT #{start},#{size}
  </select>

  <select id="getUserSelectPlan" resultType="string" parameterType="string">
    SELECT my_plan
    FROM user
    WHERE id = #{id}
  </select>

  <select id="isExistOpenid" resultType="string" parameterType="string">
    SELECT id
    FROM `user`
    WHERE wechat = #{openid}
  </select>

  <select id="getOpenId" resultType="string" parameterType="string">
    SELECT wechat
    FROM `user`
    WHERE id = #{user_id}
  </select>

  <select id="getUserSelectPlanAndDays" resultType="map" parameterType="string">
    SELECT my_plan,plan_days,plan_words_number
    FROM user
    WHERE id = #{id}
  </select>

  <select id="getUserOpenStatus" resultType="string" parameterType="string">
    SELECT whether_open
    FROM `user`
    WHERE id = #{id}
  </select>

  <select id="calculateAllWords" resultType="string" parameterType="string">
    SELECT sum(learned_word_number)
    FROM take_plans
    WHERE user_id = #{id}
  </select>


  <select id="getAllUserFeedsComment" resultType="map" parameterType="string">
    SELECT tb.*,username,portrait,`user`.id as user_id
    FROM `user`,
    (SELECT feeds.id,title,pic,video,cover_select,feeds.auther_id,tb2.`comment`,tb2.set_time
    FROM feeds,(SELECT feeds_id,feeds_comment.`comment`,set_time
    FROM feeds_comment
    WHERE user_id = #{id}) tb2
    WHERE feeds.id = tb2.feeds_id
    ORDER BY tb2.set_time DESC) tb
    WHERE `user`.id = auther_id
  </select>

  <select id="getAllUserFeedsFavour" resultType="map" parameterType="string">
    SELECT tb.*,username,portrait,`user`.id as user_id
    FROM `user`,
    (SELECT feeds.id,title,pic,video,cover_select,feeds.auther_id,tb2.set_time
    FROM feeds,(SELECT feeds_id,set_time
    FROM feeds_favour
    WHERE user_id = #{id}) tb2
    WHERE feeds.id = tb2.feeds_id
    ORDER BY tb2.set_time DESC) tb
    WHERE `user`.id = auther_id
  </select>

  <select id="getAllUserDictionaryFavour" resultType="map" parameterType="string">
    SELECT dictionary.id,dictionary.word,dictionary.phonetic_symbol,dictionary.pronunciation,dictionary.pic,tb2.set_time
    FROM dictionary,(SELECT word_id,set_time
    FROM dictionary_favour
    WHERE user_id = #{id}) tb2
    WHERE dictionary.id = tb2.word_id
    ORDER BY tb2.set_time DESC
  </select>

  <select id="getAllUserDailyPicFavour" resultType="map" parameterType="string">
    SELECT daily_pic.id,daily_pic.daily_pic,daily_pic.small_pic,tb2.set_time
    FROM daily_pic,(SELECT daily_pic_id,set_time
    FROM daily_pic_favour
    WHERE user_id = #{id}) tb2
    WHERE daily_pic.id = tb2.daily_pic_id
    ORDER BY tb2.set_time DESC
  </select>

  <select id="getAllUserVideoComment" resultType="map" parameterType="string">
    SELECT tb.*,phonetic_symbol,word
    FROM `dictionary`,
    (SELECT word_video_information.id as video_id,word_video_information.comments,views,favours,img,video,word_id,tb2.set_time,tb2.`comment`
    FROM word_video_information,(SELECT video_id,video_comment.`comment`,set_time
    FROM video_comment
    WHERE user_id = #{id}) tb2
    WHERE word_video_information.id = tb2.video_id
    ORDER BY tb2.set_time DESC) tb
    WHERE `dictionary`.id = tb.word_id
  </select>

  <select id="getAllUserVideoFavour" resultType="map" parameterType="string">
    SELECT tb.*,phonetic_symbol,word
    FROM `dictionary`,
    (SELECT word_video_information.id as video_id,word_video_information.comments,views,favours,img,video,word_id,tb2.set_time
    FROM word_video_information,(SELECT video_id,set_time
    FROM video_favour
    WHERE user_id = #{id}) tb2
    WHERE word_video_information.id = tb2.video_id
    ORDER BY tb2.set_time DESC) tb
    WHERE `dictionary`.id = tb.word_id
  </select>



  <select id="calculateRestWord" resultType="string" parameterType="string">
    SELECT (plans.word_number-take_plans.learned_word_number) AS result
    FROM take_plans,plans
    WHERE take_plans.user_id = #{id}
    AND take_plans.plan = #{plan}
    AND plans.id = take_plans.plan_id
  </select>

  <select id="getUserPortrait" resultType="string" parameterType="string">
    SELECT portrait
    FROM user
    WHERE id = #{id}
  </select>

  <delete id="deleteTakePlans" parameterType="string" >
    delete from take_plans
    WHERE user_id = #{id}
    AND plan = #{plan}
  </delete>

  <select id="getUserPlan" resultType="map" parameterType="string">
    SELECT plan,word_number,learned_word_number,days,daily_word_number
    FROM plans,(SELECT plan_id,take_plans.learned_word_number,take_plans.days,take_plans.daily_word_number
    FROM take_plans
    WHERE user_id = #{id}) tb
    WHERE plans.id = tb.plan_id
  </select>
  <select id="getUserPlanDaysNumber" resultType="map" parameterType="string">
    SELECT my_plan,plan_days,plan_words_number,insist_day,last_login,register_time,retention_flag,whether_reminder,whether_template,whether_challenge_success,challenge_red_packet,whether_invite_challenge_success,invite_challenge_red_packet,challenge_success_id
    FROM user
    WHERE id = #{id}
  </select>

  <select id="getMyWallet" resultType="map" parameterType="string">
    SELECT bill
    FROM user
    WHERE id = #{id}
  </select>

  <select id="getUserFeedsCommentLikes" resultType="map" parameterType="string">
    SELECT `user`.username,`user`.portrait,tb.*
    FROM `user`,(SELECT feeds_comment_like.user_id,tb2.`comment`,tb2.set_time
    FROM feeds_comment_like,(SELECT id,`comment`,set_time
    FROM feeds_comment
    WHERE user_id = #{id}) tb2
    WHERE feeds_comment_like.feeds_comment_id = tb2.id) tb
    WHERE tb.user_id = `user`.id
    ORDER BY set_time DESC
  </select>

  <select id="getUserFeedsReplyCommentLikes" resultType="map" parameterType="string">
    SELECT `user`.username,`user`.portrait,tb.*
    FROM `user`,(SELECT feeds_reply_comment_like.user_id,tb2.`comment`,tb2.set_time
    FROM feeds_reply_comment_like,(SELECT id,`comment`,set_time
    FROM feeds_reply_comments
    WHERE user_id = #{id}) tb2
    WHERE feeds_reply_comment_like.feeds_reply_comment_id = tb2.id) tb
    WHERE tb.user_id = `user`.id
    ORDER BY set_time DESC
  </select>

  <select id="getUserVideoCommentLikes" resultType="map" parameterType="string">
    SELECT `user`.username,`user`.portrait,tb.*
    FROM `user`,(SELECT video_comment_like.user_id,tb2.`comment`,tb2.set_time
    FROM video_comment_like,(SELECT id,`comment`,set_time
    FROM video_comment
    WHERE user_id = #{id}) tb2
    WHERE video_comment_like.video_comment_id = tb2.id) tb
    WHERE tb.user_id = `user`.id
    ORDER BY set_time DESC
  </select>

  <select id="getDailyDataInfo" resultType="map" parameterType="string">
    SELECT id,daily_add_user
    FROM data_info
    WHERE set_time = #{time}
    LIMIT 1
  </select>

  <select id="getUserAllInsistDay" resultType="map" parameterType="string">
    SELECT *
    FROM `insist_day`
    WHERE user_id = #{id}
    AND is_correct >= 2
    ORDER BY set_time
  </select>

  <select id="getUserPlanNumber" resultType="map" parameterType="string">
    SELECT my_plan,plan_days,plan_words_number,insist_day
    FROM user
    WHERE id = #{id}
  </select>
  <update id="decide_plan_days" parameterType="string">
    UPDATE user
    set plan_days = #{days},
    plan_words_number = #{daily_word_number}
    WHERE id = #{id}
  </update>

  <update id="changeAllUserNumber">
    UPDATE common_config
    set `user_number` = user_number + 1
    WHERE id = 1
  </update>

  <update id="change_open_status">
    UPDATE `user`
    set whether_open = #{number}
    WHERE id = #{id}
  </update>


  <update id="update_my_info" parameterType="string">
    UPDATE `user`
    set gender = #{gender},
    personality_signature = #{personality_signature},
    username = #{username}
    WHERE id = #{id}
  </update>

  <update id="update_my_portrait" parameterType="string">
    UPDATE `user`
    set portrait = #{portrait}
    WHERE id = #{id}
  </update>

  <update id="update_username_portrait" parameterType="string">
    UPDATE `user`
    set portrait = #{portrait},
    username = #{username}
    WHERE id = #{id}
  </update>

  <update id="decide_plan_user" parameterType="string">
    UPDATE user
    set my_plan = #{plan},
    plan_days = #{days},
    plan_words_number = #{daily_word_number}
    WHERE id = #{id}
  </update>

  <insert id="decide_plan_all" parameterType="string">
    INSERT INTO take_plans (plan, user_id, plan_id, days, daily_word_number)
    values (#{plan}, #{id}, (SELECT id FROM plans WHERE plan = #{plan}), #{days}, #{daily_word_number})
  </insert>

  <insert id="insertDataInfo" parameterType="string">
    INSERT INTO data_info (daily_add_user, mau, set_time)
    values (#{daily_add_user}, IFNULL((SELECT max_mau FROM (SELECT MAX(`mau`) as max_mau FROM data_info WHERE set_time >= #{mau_time}) tb),0), #{set_time})
  </insert>

  <insert id="add_tip_off">
    INSERT INTO tip_off (`type`, report_reason)
    values (#{type}, #{report_reason})
  </insert>

  <insert id="error_correction" parameterType="string">
    INSERT INTO error_correction (`word_id`, user_id,`paraphrase`, real_meaning,`sentence`, other_sentence,other)
    values (#{word_id}, #{user_id},#{paraphrase}, #{real_meaning},#{sentence}, #{other_sentence},#{other})
  </insert>


  <insert id="advice" parameterType="string">
    INSERT INTO advice (advice, `level`, set_time)
    values (#{advice}, #{level}, #{time})
  </insert>

  <select id="check_plan" resultType="int" parameterType="string" >
    SELECT IFNULL(word_number,0)
    FROM plans
    WHERE plan = #{plan}
  </select>

  <select id="selectUserPlanExist" resultType="map" parameterType="string" >
    SELECT id,days,daily_word_number
    FROM take_plans
    WHERE plan = #{plan}
    AND user_id = #{id}
  </select>

  <insert id="insertUser" parameterType="com.yj.pojo.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (id, username, password,
    portrait, phone, gender,
    my_plan, plan_days, plan_words_number,
    personality_signature, wechat, qq,
    register_time, last_login, insist_day,
    whether_open, clock_day)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{portrait,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
    #{myPlan,jdbcType=VARCHAR}, #{planDays,jdbcType=INTEGER}, #{planWordsNumber,jdbcType=INTEGER},
    #{personalitySignature,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR},
    #{registerTime,jdbcType=VARCHAR}, #{lastLogin,jdbcType=VARCHAR}, #{insistDay,jdbcType=INTEGER},
    #{whetherOpen,jdbcType=INTEGER}, #{clockDay,jdbcType=INTEGER})
  </insert>
</mapper>