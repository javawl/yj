<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yj.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.yj.pojo.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="wechat" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="qq" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="register_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="last_login" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, phone, gender, wechat, qq, register_time, last_login
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yj.pojo.User" >
    insert into user (id, username, password, 
      phone, gender, wechat, 
      qq, register_time, last_login
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{wechat,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{registerTime,jdbcType=VARCHAR}, #{lastLogin,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yj.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="wechat != null" >
        wechat,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yj.pojo.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yj.pojo.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      wechat = #{wechat,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--下面是自己建的-->
  <select id="checkUser" resultType="int" parameterType="string" >
    SELECT COUNT(1) FROM user
    WHERE phone = #{phone}
  </select>
  <select id="checkUsername" resultType="int" parameterType="string" >
    SELECT COUNT(1) FROM user
    WHERE username = #{username}
  </select>
  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List" />
    FROM user
    WHERE phone = #{username}
    AND password = #{password}
  </select>
  <!--<select id="getIdByPhone" resultType="map" parameterType="string">-->
    <!--SELECT-->
     <!--id-->
    <!--FROM user-->
    <!--WHERE phone = #{phone}-->
  <!--</select>-->
  <select id="getIdByPhone" resultType="int" parameterType="string">
    SELECT
     IFNULL(MIN(id),0)
    FROM user
    WHERE phone = #{phone}
  </select>

  <update id="updatePassword" parameterType="string" >
    UPDATE user
    set password = #{password}
    WHERE phone = #{phone}
  </update>

  <select id="selectPlanTypes" resultType="map" >
    SELECT
      type
    FROM plan_types
  </select>
  
  <select id="selectPlanByType" resultType="map" parameterType="string">
    SELECT plan,word_number
    FROM plans
    WHERE (SELECT id
			FROM plan_types
            WHERE type = #{type})
            = type_id
  </select>


  <select id="getMyPlanWordsNumber" resultType="int" parameterType="string">
    SELECT CASE WHEN (SELECT my_plan
			 FROM user
       WHERE id = #{id})
    IS NULL THEN 0
    ELSE (SELECT word_number
    FROM plans
    WHERE (SELECT my_plan
                 FROM user
           WHERE id = #{id})= plan)
    END
  </select>


  <select id="getPlanWordsNumberByPlan" resultType="int" parameterType="string">
    SELECT  word_number
    FROM plans
    WHERE plan = #{plan}
  </select>

  <select id="getUserSelectPlan" resultType="string" parameterType="string">
    SELECT my_plan
       FROM user
    WHERE id = #{id}
  </select>

  <select id="getUserPlan" resultType="map" parameterType="string">
    SELECT plan
    FROM plans
    WHERE id IN (SELECT plan_id
        FROM take_plans
    WHERE user_id = #{id})
  </select>
  <select id="getUserPlanDaysNumber" resultType="map" parameterType="string">
    SELECT my_plan,plan_days,plan_words_number,insist_day
    FROM user
    WHERE id = #{id}
  </select>
  <update id="decide_plan_days" parameterType="string">
    UPDATE user
    set plan_days = #{days},
    plan_words_number = #{daily_word_number}
    WHERE id = #{id}
  </update>

  <update id="decide_plan_user" parameterType="string">
    UPDATE user
    set my_plan = #{plan},
    plan_days = #{days},
    plan_words_number = #{daily_word_number}
    WHERE id = #{id}
  </update>

  <insert id="decide_plan_all" parameterType="string">
    INSERT INTO take_plans (plan, user_id, plan_id, days, daily_word_number)
    values (#{plan}, #{id}, (SELECT id FROM plans WHERE plan = #{plan}), #{days}, #{daily_word_number})
  </insert>

  <select id="check_plan" resultType="int" parameterType="string" >
    SELECT IFNULL(word_number,0)
    FROM plans
    WHERE plan = #{plan}
  </select>

  <select id="selectUserPlanExist" resultType="map" parameterType="string" >
    SELECT id,days,daily_word_number
    FROM take_plans
    WHERE plan = #{plan}
    AND user_id = #{id}
  </select>
</mapper>